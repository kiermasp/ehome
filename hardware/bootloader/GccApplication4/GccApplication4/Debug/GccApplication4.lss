
GccApplication4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  00000170  00000204  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000170  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800102  00800102  00000206  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000206  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000236  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000000c3  00000000  00000000  00000256  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000073  00000000  00000000  00000319  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000000d5  00000000  00000000  0000038c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00000464  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000ee  00000000  00000000  00000498  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000003b  00000000  00000000  00000586  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  70:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d4 e0       	ldi	r29, 0x04	; 4
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	11 e0       	ldi	r17, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	e0 e7       	ldi	r30, 0x70	; 112
  90:	f1 e0       	ldi	r31, 0x01	; 1
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	a2 30       	cpi	r26, 0x02	; 2
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	21 e0       	ldi	r18, 0x01	; 1
  a0:	a2 e0       	ldi	r26, 0x02	; 2
  a2:	b1 e0       	ldi	r27, 0x01	; 1
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	a6 30       	cpi	r26, 0x06	; 6
  aa:	b2 07       	cpc	r27, r18
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	0e 94 5d 00 	call	0xba	; 0xba <main>
  b2:	0c 94 b6 00 	jmp	0x16c	; 0x16c <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <main>:
uint8_t ID = 0xFF;
uint8_t GROUP = 0xFF;
uint32_t BUTTON_ID_FRAME;

int main(void)
{
  ba:	cf 93       	push	r28
  bc:	df 93       	push	r29
  be:	cd b7       	in	r28, 0x3d	; 61
  c0:	de b7       	in	r29, 0x3e	; 62
    while(1)
    {
	PORTB = 0x55;
  c2:	85 e2       	ldi	r24, 0x25	; 37
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	25 e5       	ldi	r18, 0x55	; 85
  c8:	fc 01       	movw	r30, r24
  ca:	20 83       	st	Z, r18
	PORTD = 0x55;
  cc:	8b e2       	ldi	r24, 0x2B	; 43
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	25 e5       	ldi	r18, 0x55	; 85
  d2:	fc 01       	movw	r30, r24
  d4:	20 83       	st	Z, r18

  BUTTON_ID_FRAME |= ((uint32_t)0x301 << 20); //set id for button
  d6:	80 91 02 01 	lds	r24, 0x0102
  da:	90 91 03 01 	lds	r25, 0x0103
  de:	a0 91 04 01 	lds	r26, 0x0104
  e2:	b0 91 05 01 	lds	r27, 0x0105
  e6:	a0 61       	ori	r26, 0x10	; 16
  e8:	b0 63       	ori	r27, 0x30	; 48
  ea:	80 93 02 01 	sts	0x0102, r24
  ee:	90 93 03 01 	sts	0x0103, r25
  f2:	a0 93 04 01 	sts	0x0104, r26
  f6:	b0 93 05 01 	sts	0x0105, r27
  BUTTON_ID_FRAME |= ((uint32_t)ID << 8); //set id for buttons
  fa:	80 91 00 01 	lds	r24, 0x0100
  fe:	88 2f       	mov	r24, r24
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	a0 e0       	ldi	r26, 0x00	; 0
 104:	b0 e0       	ldi	r27, 0x00	; 0
 106:	22 27       	eor	r18, r18
 108:	38 2f       	mov	r19, r24
 10a:	49 2f       	mov	r20, r25
 10c:	5a 2f       	mov	r21, r26
 10e:	80 91 02 01 	lds	r24, 0x0102
 112:	90 91 03 01 	lds	r25, 0x0103
 116:	a0 91 04 01 	lds	r26, 0x0104
 11a:	b0 91 05 01 	lds	r27, 0x0105
 11e:	82 2b       	or	r24, r18
 120:	93 2b       	or	r25, r19
 122:	a4 2b       	or	r26, r20
 124:	b5 2b       	or	r27, r21
 126:	80 93 02 01 	sts	0x0102, r24
 12a:	90 93 03 01 	sts	0x0103, r25
 12e:	a0 93 04 01 	sts	0x0104, r26
 132:	b0 93 05 01 	sts	0x0105, r27
  BUTTON_ID_FRAME |= (GROUP); //set id for buttons
 136:	80 91 01 01 	lds	r24, 0x0101
 13a:	28 2f       	mov	r18, r24
 13c:	30 e0       	ldi	r19, 0x00	; 0
 13e:	40 e0       	ldi	r20, 0x00	; 0
 140:	50 e0       	ldi	r21, 0x00	; 0
 142:	80 91 02 01 	lds	r24, 0x0102
 146:	90 91 03 01 	lds	r25, 0x0103
 14a:	a0 91 04 01 	lds	r26, 0x0104
 14e:	b0 91 05 01 	lds	r27, 0x0105
 152:	82 2b       	or	r24, r18
 154:	93 2b       	or	r25, r19
 156:	a4 2b       	or	r26, r20
 158:	b5 2b       	or	r27, r21
 15a:	80 93 02 01 	sts	0x0102, r24
 15e:	90 93 03 01 	sts	0x0103, r25
 162:	a0 93 04 01 	sts	0x0104, r26
 166:	b0 93 05 01 	sts	0x0105, r27
        //TODO:: Please write your application code 
    }
 16a:	ab cf       	rjmp	.-170    	; 0xc2 <main+0x8>

0000016c <_exit>:
 16c:	f8 94       	cli

0000016e <__stop_program>:
 16e:	ff cf       	rjmp	.-2      	; 0x16e <__stop_program>
